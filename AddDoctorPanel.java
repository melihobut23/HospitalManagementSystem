package hospitalmanagementsystem;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.mysql.jdbc.Statement;


public class AddDoctorPanel extends javax.swing.JFrame {

 private int userId = 0;

 /**
  * Creates new form AddPatientPanel
  */
 public AddDoctorPanel() {
  initComponents();
  connect();
  getAutoId();
  doctorTable();
 }

 Connection con;
 PreparedStatement pst;
 ResultSet rs;

 /**
  * connect method establish the link between database and java codes
  */
 public void connect() {
  try {
   Class.forName("com.mysql.jdbc.Driver");
   con = DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagementsystem", "root", "");
  } catch (ClassNotFoundException e) {
   // TODO Auto-generated catch block
   e.printStackTrace();
  } catch (SQLException e) {
   // TODO Auto-generated catch block
   e.printStackTrace();
  }
 }

 /**
  * this metod take id number from database which starts from zero
  */
 public void getAutoId() {
  try {
   java.sql.Statement s = con.createStatement();
   rs = s.executeQuery("select MAX(doctorid) from doctor");
   rs.next();
   rs.getString("MAX(doctorid)");

   if (rs.getString("MAX(doctorid)") == null) {
    givenDoctorNo.setText("PS001");
   } else {
    long id = Long.parseLong(rs.getString("MAX(doctorid)").substring(2, rs.getString("MAX(doctorid)").length()));
    id++;
    givenDoctorNo.setText("PS" + String.format("%03d", id));
   }
  } catch (SQLException e) {
   // TODO Auto-generated catch block
   e.printStackTrace();
  }
 }
 /**
  * this metod show doctors which stands in table
  */
 public void doctorTable() {
  try {
   pst = con.prepareStatement("select * from doctor");
   rs = pst.executeQuery();
   ResultSetMetaData Rsm = rs.getMetaData();
   int column = Rsm.getColumnCount();
   DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
   df.setRowCount(0);
   while (rs.next()) {
    Vector v = new Vector();

    for (int i = 0; i < column; i++) {
     v.add(rs.getString("doctorid"));
     v.add(rs.getString("name"));
     v.add(rs.getString("special"));
     v.add(rs.getString("qual"));
     v.add(rs.getString("phone"));
     v.add(rs.getString("room"));
     v.add(rs.getString("logid"));
    }

    df.addRow(v);

   }
  } catch (SQLException e) {
   // TODO Auto-generated catch block
   e.printStackTrace();
  }

 }

 /**
  * This method is called from within the constructor to initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is always
  * regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
 private void initComponents() {

  jPanel2 = new javax.swing.JPanel();
  jPanel1 = new javax.swing.JPanel();
  jPanel3 = new javax.swing.JPanel();
  addButton = new javax.swing.JButton();
  deleteButton = new javax.swing.JButton();
  backButton = new javax.swing.JButton();
  updateButton = new javax.swing.JButton();
  jLabel1 = new javax.swing.JLabel();
  noLabel = new javax.swing.JLabel();
  nameLabel = new javax.swing.JLabel();
  specialLabel = new javax.swing.JLabel();
  qualificationLabel = new javax.swing.JLabel();
  phoneNumberLabel = new javax.swing.JLabel();
  roomNoLabel = new javax.swing.JLabel();
  name = new javax.swing.JTextField();
  roomNo = new javax.swing.JTextField();
  phoneNumber = new javax.swing.JTextField();
  givenDoctorNo = new javax.swing.JLabel();
  specialCombo = new javax.swing.JComboBox<>();
  qualificationCombo = new javax.swing.JComboBox<>();
  jPanel4 = new javax.swing.JPanel();
  jScrollPane1 = new javax.swing.JScrollPane();
  jTable1 = new javax.swing.JTable();

  javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
  jPanel2.setLayout(jPanel2Layout);
  jPanel2Layout.setHorizontalGroup(
    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGap(0, 100, Short.MAX_VALUE)
    );
  jPanel2Layout.setVerticalGroup(
    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGap(0, 100, Short.MAX_VALUE)
    );

  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  jPanel1.setBackground(new java.awt.Color(51, 153, 255));

  jPanel3.setBackground(new java.awt.Color(51, 153, 255));

  addButton.setBackground(new java.awt.Color(51, 102, 255));
  addButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
  addButton.setText("ADD");
  addButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    addButtonActionPerformed(evt);
   }
  });

  deleteButton.setBackground(new java.awt.Color(51, 102, 255));
  deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
  deleteButton.setText("DELETE");
  deleteButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    deleteButtonActionPerformed(evt);
    String id = givenDoctorNo.getText();
    DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
    df.setRowCount(0);

    try {
     pst = con.prepareStatement("delete from doctor where doctorid=?");
     pst.setString(1, id);
     pst.executeUpdate();

     pst = con.prepareStatement("delete from user where id=?");
     pst.setInt(1, userId);
     pst.executeUpdate();

     JOptionPane.showMessageDialog(null, "doctor and user deleted");

     getAutoId();
     name.setText("");
     specialCombo.setSelectedIndex(-1);
     qualificationCombo.setSelectedIndex(-1);
     phoneNumber.setText("");
     roomNo.setText("");
     name.requestFocus();
     doctorTable();

    } catch (SQLException e) {
     // TODO Auto-generated catch block
     e.printStackTrace();
    }
   }
  });

  backButton.setBackground(new java.awt.Color(51, 102, 255));
  backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
  backButton.setText("BACK");
  backButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    backButtonActionPerformed(evt);
   }
  });

  updateButton.setBackground(new java.awt.Color(51, 102, 255));
  updateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
  updateButton.setText("UPDATE");
  updateButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    updateButtonActionPerformed(evt);
   }
  });

  jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
   public void mouseClicked(java.awt.event.MouseEvent evt) {
    jTable1MouseClicked(evt);

   }
  });

  jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
  jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
  jLabel1.setText("ADD DOCTOR");

  noLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  noLabel.setText("DOCTOR NO");
  noLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

  nameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  nameLabel.setText("NAME-SURNAME");

  specialLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  specialLabel.setText("SPECIAL");

  qualificationLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  qualificationLabel.setText("QUALIFICATION");

  phoneNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  phoneNumberLabel.setText("PHONE NUMBER");

  roomNoLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  roomNoLabel.setText("ROOM NO");
  roomNoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

  name.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    nameActionPerformed(evt);
   }
  });

  roomNo.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    roomNoActionPerformed(evt);
   }
  });

  specialCombo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  specialCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Anesthesiology", "Dental Services", "Emergency Medicine", "Gynecology", "Family Medicine", "Head and Neck Surgery", "Medicine", "Neurology", "Orthopaedic Surgery", "Pathology", "Pediatrics", "Psychiatry", "Radiation Oncology", "Radiology", "Rehabilitation Services", "Surgery", "Urology", " "}));
  specialCombo.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    specialComboActionPerformed(evt);
   }
  });

  qualificationCombo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  qualificationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Medical school.", "Bachelor of Medicine, Bachelor of Surgery.", "Bachelor of Medical Sciences.", "Master of Medicine.", "Master of Surgery.", "Doctor of Medicine.", "Doctor of Osteopathic Medicine.", "MDï¿½PhD."}));
  qualificationCombo.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    qualificationComboActionPerformed(evt);
   }
  });

  javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
  jPanel3.setLayout(jPanel3Layout);
  jPanel3Layout.setHorizontalGroup(
    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanel3Layout.createSequentialGroup()
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
          .addGap(0, 55, Short.MAX_VALUE)
          .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addComponent(specialLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addComponent(specialCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel3Layout.createSequentialGroup()
              .addComponent(noLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
              .addComponent(givenDoctorNo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addGroup(jPanel3Layout.createSequentialGroup()
          .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(phoneNumberLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(roomNoLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(qualificationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
          .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addComponent(roomNo)
            .addComponent(qualificationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(phoneNumber))))
      .addGap(18, 18, 18))
    );
  jPanel3Layout.setVerticalGroup(
    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
      .addContainerGap()
      .addComponent(jLabel1)
      .addGap(18, 18, 18)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(noLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(givenDoctorNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
          .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 1, Short.MAX_VALUE))
        .addComponent(name))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
        .addComponent(specialLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        .addComponent(specialCombo))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(qualificationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(qualificationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(phoneNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(roomNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(roomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGap(31, 31, 31)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGap(40, 40, 40))
    );

  jPanel4.setBackground(new java.awt.Color(51, 153, 255));

  javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
  jPanel4.setLayout(jPanel4Layout);
  jPanel4Layout.setHorizontalGroup(
    jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGap(0, 594, Short.MAX_VALUE)
    );
  jPanel4Layout.setVerticalGroup(
    jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGap(0, 74, Short.MAX_VALUE)
    );

  jTable1.setModel(new javax.swing.table.DefaultTableModel(
    new Object[][]{},
    new String[]{
      "Doctor No", "Name-Surname", "Special", "Qualification", "Phone Number", "Room No", "User ID"
    }
    ) {
   Class[] types = new Class[]{
     java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
   };

   public Class getColumnClass(int columnIndex) {
    return types[columnIndex];
   }
  });
  jScrollPane1.setViewportView(jTable1);

  javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
  jPanel1.setLayout(jPanel1Layout);
  jPanel1Layout.setHorizontalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
      .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGap(88, 88, 88))
    );
  jPanel1Layout.setVerticalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    .addGroup(jPanel1Layout.createSequentialGroup()
      .addGap(45, 45, 45)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
  layout.setVerticalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
  setMaximizedBounds(new java.awt.Rectangle(0, 0, 1010, 575));
  setResizable(true);
  setSize(new java.awt.Dimension(1010, 575));
  setLocationRelativeTo(null);
 }// </editor-fold>                        

 private void nameActionPerformed(java.awt.event.ActionEvent evt) {
  // TODO add your handling code here:
 }

 private void roomNoActionPerformed(java.awt.event.ActionEvent evt) {
  // TODO add your handling code here:
 }

 /**
  * When clicked updatebutton this method list will be updated
  */
 private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {
  String id = givenDoctorNo.getText();
  String nameSurname = name.getText();
  String special = specialCombo.getSelectedItem().toString();
  String qual = qualificationCombo.getSelectedItem().toString();
  long phoneNum = Long.parseLong(phoneNumber.getText());
  int room = Integer.parseInt(roomNo.getText());

  try {
   pst = con.prepareStatement("UPDATE doctor SET special = " + "'" + special + "'"
     + ",  room = " + room + ",  qual = " + "'" + qual + "'" + ", phone = "
     + phoneNum + " WHERE doctorid = " + "'" + id.toString() + "'");
   pst.executeUpdate();

   JOptionPane.showMessageDialog(null, "doctor updated!");

   getAutoId();
   name.setText("");
   specialCombo.setSelectedIndex(-1);
   qualificationCombo.setSelectedIndex(-1);
   phoneNumber.setText("");
   roomNo.setText("");
   name.requestFocus();
   doctorTable();;

  } catch (SQLException e) {
   // TODO Auto-generated catch block
   e.printStackTrace();
  }
 }
 /**
  * When clicked updatebutton this method list will be updated
  */
 private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
  this.setVisible(false);
 }

 private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
  // TODO add your handling code here:
 }

 /**
  * When clicked add button it add doctors to the user 
  */
 private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
  String id = givenDoctorNo.getText();
  String nameSurname = name.getText();
  String special = specialCombo.getSelectedItem().toString();
  String qual = qualificationCombo.getSelectedItem().toString();
  long phoneNum = Long.parseLong(phoneNumber.getText());
  int room = Integer.parseInt(roomNo.getText());
  try {
   pst = con.prepareStatement("select * from user where name = ?");
  } catch (SQLException e1) {
   // TODO Auto-generated catch block
   e1.printStackTrace();
  }
  try {
   pst.setString(1, nameSurname);
  } catch (SQLException e1) {
   // TODO Auto-generated catch block
   e1.printStackTrace();
  }
  try {
   rs = pst.executeQuery();
  } catch (SQLException e1) {
   // TODO Auto-generated catch block
   e1.printStackTrace();
  }
  userId = 0;
  try {
   if (rs.next()) {
    userId = rs.getInt("id");
   }
  } catch (SQLException e1) {
   // TODO Auto-generated catch block
   e1.printStackTrace();
  }
  if (userId != 0) {
   try {
    pst = con.prepareStatement("insert into doctor(doctorid, name, special, qual, phone, room, logid)values(?,?,?,?,?,?,?)");
    pst.setString(1, id);
    pst.setString(2, nameSurname);
    pst.setString(3, special);
    pst.setString(4, qual);
    pst.setLong(5, phoneNum);
    pst.setInt(6, room);
    pst.setInt(7, userId);
    pst.executeUpdate();

    JOptionPane.showMessageDialog(null, "doctor inserted");

    getAutoId();
    name.setText("");
    specialCombo.setSelectedIndex(-1);
    qualificationCombo.setSelectedIndex(-1);
    phoneNumber.setText("");
    roomNo.setText("");
    name.requestFocus();
    doctorTable();

   } catch (SQLException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
   }
  } else {
   JOptionPane.showMessageDialog(null, "There is no doctor user given informations!");

  }

 }

 private void specialComboActionPerformed(java.awt.event.ActionEvent evt) {
  // TODO add your handling code here:
 }

 private void qualificationComboActionPerformed(java.awt.event.ActionEvent evt) {
  // TODO add your handling code here:
 }
 /**
  * When clicked table get the information  about doctor
  */
 private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
  DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
  int index = jTable1.getSelectedRow();
  givenDoctorNo.setText(d1.getValueAt(index, 0).toString());
  name.setText(d1.getValueAt(index, 1).toString());
  specialCombo.setSelectedItem(d1.getValueAt(index, 2).toString());
  qualificationCombo.setSelectedItem(d1.getValueAt(index, 3).toString());
  phoneNumber.setText(d1.getValueAt(index, 4).toString());
  roomNo.setText(d1.getValueAt(index, 5).toString());
  userId = Integer.parseInt(d1.getValueAt(index, 6).toString());
 }

 /**
  * @param args the command line arguments
  */
 public static void main(String args[]) {
  /* Set the Nimbus look and feel */
  //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
  /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
   * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
   */
  try {
   for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
    }
   }
  } catch (ClassNotFoundException ex) {
   java.util.logging.Logger.getLogger(AddDoctorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (InstantiationException ex) {
   java.util.logging.Logger.getLogger(AddDoctorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (IllegalAccessException ex) {
   java.util.logging.Logger.getLogger(AddDoctorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (javax.swing.UnsupportedLookAndFeelException ex) {
   java.util.logging.Logger.getLogger(AddDoctorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  }
  //</editor-fold>
  //</editor-fold>

  /* Create and display the form */
  java.awt.EventQueue.invokeLater(new Runnable() {
   public void run() {
    new AddDoctorPanel().setVisible(true);
   }
  });
 }

 // Variables declaration - do not modify                     
 private javax.swing.JButton addButton;
 private javax.swing.JButton backButton;
 private javax.swing.JButton deleteButton;
 private javax.swing.JLabel givenDoctorNo;
 private javax.swing.JLabel jLabel1;
 private javax.swing.JPanel jPanel1;
 private javax.swing.JPanel jPanel2;
 private javax.swing.JPanel jPanel3;
 private javax.swing.JPanel jPanel4;
 private javax.swing.JScrollPane jScrollPane1;
 private javax.swing.JTable jTable1;
 private javax.swing.JTextField name;
 private javax.swing.JLabel nameLabel;
 private javax.swing.JLabel noLabel;
 private javax.swing.JTextField phoneNumber;
 private javax.swing.JLabel phoneNumberLabel;
 private javax.swing.JComboBox<String> qualificationCombo;
 private javax.swing.JLabel qualificationLabel;
 private javax.swing.JTextField roomNo;
 private javax.swing.JLabel roomNoLabel;
 private javax.swing.JComboBox<String> specialCombo;
 private javax.swing.JLabel specialLabel;
 private javax.swing.JButton updateButton;
 // End of variables declaration                   
}
